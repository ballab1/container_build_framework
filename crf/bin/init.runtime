#!/bin/bash

#############################################################################
function pathNotScanned()
{
    local -r path=${1:?"Input parameter 'path' must be passed to 'function ${FUNCNAME[0]}()'"}

    local -i status
    (grep -sq "$path" "$scanTracker" > /dev/null 2>&1 ) && status=$? || status=$?
    [ "$status" -ne 0 ] || return 1
    echo "$path" >> "$scanTracker"
    return 0
}

#############################################################################
function libNotLoaded()
{
    local -r filename=${1:?"Input parameter 'filename' must be passed to 'function ${FUNCNAME[0]}()'"}
    local -r libname="$( basename "$filename" )"

    local -i status
    (grep -sq "$libname" "$crfLibTracker" > /dev/null 2>&1 ) && status=$? || status=$?
    [ "$status" -ne 0 ] || return 1
    echo "$libname" >> "$crfLibTracker"
    return 0
}

#############################################################################
function envNotLoaded()
{
    local -r filename=${1:?"Input parameter 'filename' must be passed to 'function ${FUNCNAME[0]}()'"}
    local -r envname="$( basename "$filename" )"

    local -i status
    (grep -sq "$envname" "$envTracker" > /dev/null 2>&1 ) && status=$? || status=$?
    [ "$status" -ne 0 ] || return 1
    echo "$envname" >> "$envTracker"
    return 0
}

#############################################################################
function loadLibs()
{
    local -a path=${1:?"Input parameter 'path' must be passed to 'function ${FUNCNAME[0]}()'"}

    [ "$path" ] || return 0
    pathNotScanned "$path" || return 0
    [ -d "${path}/bashlib" ] || return 0
    local -ar files=( $(find "${path}/bashlib" -maxdepth 1 -mindepth 1 -type f ! -name '.*'  -print) )
    [ ${#files[@]} -gt 0 ] || return 0

    local src
    for src in "${files[@]}" ; do
        if  libNotLoaded "$src" ; then
            echo "    loading library: ${src}"
            source "$src"
        fi
    done
}

#############################################################################
function loadEnvars()
{
    local -a path=${1:?"Input parameter 'path' must be passed to 'function ${FUNCNAME[0]}()'"}
    local -a files=()

    if [ "${path}" ] && [  -d "${path}/environment" ]; then
        files=( $(find "${path}/environment" -maxdepth 1 -mindepth 1 -type f ! -name '.*'  -print) )
    fi
    [ "${#files[@]}" -eq 0 ] || printf "%s\n" "${files[@]}"
}

#############################################################################

: ${CBF_LOCATION:=/tmp}
: ${CRF_LOCATION:=/usr/local/crf}

# init our cache files
[ "${envTracker:-}" ] || declare -rx envTracker="${CBF_LOCATION}/environment.loaded"
[ "${cbfLibTracker:-}" ] || declare -rx cbfLibTracker="${CBF_LOCATION}/bashlibs.loaded"
[ "${crfLibTracker:-}" ] || declare -rx crfLibTracker="${CBF_LOCATION}/crf.bashlibs.loaded"
[ "${scanTracker:-}" ] || declare -rx scanTracker="${CBF_LOCATION}/scanned.paths"
if [ -e "$cbfLibTracker" ]; then
    cp "$cbfLibTracker" "$crfLibTracker"
else
    :>  "$crfLibTracker"
fi
:>  "$envTracker"
:>  "$scanTracker"


# load our bashlibs
loadLibs "${CRF_LOCATION}"
loadLibs "${CBF_LOCATION}${CRF_LOCATION}"
loadLibs "$( cd "$( dirname "${BASH_SOURCE[0]}" )/.." && pwd )"

# load our environment
if [ -e "${CRF_LOCATION}/bin/rt.environment" ]; then
    echo "    sourcing: ${CRF_LOCATION}/bin/rt.environment"
    source "${CRF_LOCATION}/bin/rt.environment"
fi

# load our definitions (associative arrays)
declare -a _files=( $(loadEnvars "${CRF_LOCATION}") )
_files+=( $(loadEnvars "${CBF_LOCATION}${CRF_LOCATION}") )
_files+=( $(loadEnvars "$( cd "$( dirname "${BASH_SOURCE[0]}" )/.." && pwd )") )
if [ "${#_files[@]}" -gt 0 ]; then
    for _src in "${_files[@]}" ; do
        if envNotLoaded "$_src" ; then
            echo "    sourcing: ${_src}"
            source "$_src"
        fi
    done
fi

[ ! -e /tmp/dump_env ] || declare -p

# init the framework
crf.__init "$CRF_LOCATION"
