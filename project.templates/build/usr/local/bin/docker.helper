#!/bin/sh

declare -r runningEnv="/usr/local/bin/docker-environment.sh"

#------------------------------------------------------------------
function docker.file_env()
{
    local var="$1"
    local fileVar="${var}_FILE"
    local def="${2:-}"
    if [ "${!var:-}" ] && [ "${!fileVar:-}" ]; then
        echo >&2 "error: both $var and $fileVar are set (but are exclusive)"
        exit 1
    fi
    local val="$def"
    if [ "${!var:-}" ]; then
        val="${!var}"
    elif [ "${!fileVar:-}" ]; then
        val="$(< "${!fileVar}")"
    fi
    export "$var"="$val"
    unset "$fileVar"
}

#------------------------------------------------------------------
function docker.prepareEnvironment()
{
    # clean out old plugins to ensure we are always at specified versions
:
#    [[ -d "$pluginsFolder" ]] && rm -rf "$pluginsFolder"
#    mkdir -p "$pluginsFolder"
#    cp -r "$pluginsReferenceFolder"/* "$pluginsFolder"
#
#    chown -R docker:docker "$JENKINS_HOME"
#    chown -R docker:docker /usr/share/docker/ref
#    if [ "${JENKINS_GITHUB_EMAIL}" ]; then
#        git config --global user.email "${JENKINS_GITHUB_EMAIL}"
#        unset JENKINS_GITHUB_EMAIL
#    fi
#    if [ "${JENKINS_GITHUB_NAME}" ]; then
#        git config --system user.name "${JENKINS_GITHUB_NAME}"
#        unset JENKINS_GITHUB_NAME
#    fi
#    if [ "${JENKINS_GITHUB_CREDENTIALS}" ]; then
#        git config --system credential.user "${JENKINS_GITHUB_CREDENTIALS}"
#        unset JENKINS_GITHUB_CREDENTIALS
#    fi
} 

#------------------------------------------------------------------
function docker.setExports()
{
    local currentEnv=/tmp/env.sh
    
    [ -e "$runningEnv" ] && source "$runningEnv"
}

