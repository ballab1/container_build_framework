#!/bin/bash
#############################################################################
#
#   package.bashlib
#
#############################################################################

function package.checkIfInstalled()
{
    local -r PKGS=${1:?'Input parameter "PKGS" must be defined'}
    
    local installed=$(lib.intersect "$PKGS" "$( package.packageList )")
    [ -z "$installed" ] || trap.die "attempting to reinstall following packages: '$installed'"
    
    # now verify that packages are actually valid for installation
    for pkg in $PKGS; do 
        package.checkPackage &>/dev/null || { echo "Package $pkg not found"; exit 1; }
    done 
}

#############################################################################
function package.checkPackage()
{
    local -r pkg=${1:?'Input parameter "pkg" must be defined'}

    case "${CBF['os_id']}" in
        alpine)        apk info $pkg;;
        centos)        yum info $pkg;;
        fedora)        dnf info $pkg;;
        ubuntu)        apt-get info $pkg;;
    esac
}

#############################################################################
function package.install()
{
    local -r pkg=${1:?'Input parameter "pkg" must be defined'}
    
    $LOG "Installing ${pkg}${LF}" 'task'

    source $pkg
    : ${OPTS:=''}
    package.checkIfInstalled "$PKGS"

    case "${CBF['os_id']}" in
        alpine)        apk add --no-cache $OPTS $PKGS;;
        centos)        yum install -y $OPTS $PKGS; yum clean all;;
        fedora)        dnf install -y $OPTS $PKGS && dnf clean all;;
        ubuntu)        apt-get install -y $OPTS $PKGS;;
    esac
}

#############################################################################
function package.installTimezone()
{
    local -r tz=${1:?'Input parameter "tz" must be defined'}
    
    package.updateIndexes
    apk add --no-cache tzdata
    echo "$tz" > /etc/TZ
    cp "/usr/share/zoneinfo/$tz" /etc/timezone
    cp "/usr/share/zoneinfo/$tz" /etc/localtime
}

#############################################################################
function package.packageList()
{
    case "${CBF['os_id']}" in
        alpine)        apk info;;
        centos)        yum list | awk '{print $1 }';;
        fedora)        dnf --help;;
        ubuntu)        apt-get --help;;
    esac
}

#############################################################################
function package.runScripts()
{
    local -a files=${1:?'Input parameter "files" must be defined'}

    for file in ${files[@]}; do
        local _extension="${file##*.}"
        [ "$_extension" != "${CBF['os_id']}" ] || ( package.install "$file" )
    done
}

#############################################################################
function package.updateIndexes()
{
    case "${CBF['os_id']}" in
        alpine)        apk update;;
        centos)        yum update -y;;
        fedora)        dnf -y update && dnf clean all;;
        ubuntu)        apt-get update -y;;
    esac
}
