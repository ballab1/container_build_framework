#!/bin/echo 'This script cannot be executabled directly. Please source from another script'

#----------------------------------------------------------------------------------------------
#
#   environ.bashlib; basic functions to get info about environment
#

#----------------------------------------------------------------------------------------------
function environ.container()
{
    export HOST_IP="$(environ.ipAddress)"
    export HOST_NAME="$(environ.shortName)"
    export HOST_FQDN="$(environ.fqdName)"
    [ ${CFG_USER_SECRETS:-} ] || export CFG_USER_SECRETS
    [ -e ~/.crypt-key ]       || export CRYPT_FILE=~/.crypt-key
}
export -f environ.container

#----------------------------------------------------------------------------------------------
function environ.cpuType()
{
    lscpu | grep Architecture | awk '{print $2 }'
}
export -f environ.cpuType

#----------------------------------------------------------------------------------------------
function environ.domain()
{
    hostname -d
}
export -f environ.domain

#----------------------------------------------------------------------------------------------
function environ.fqdName()
{
    hostname -f
}
export -f environ.fqdName

#----------------------------------------------------------------------------------------------
function environ.getHostIp()
{
    local -r name=${1:-}

    if [ -z "${name:-}" ]; then
        return environ.hostIp
    fi

    ( environ.validateIpAddress "$name" ) && return 0

    local ip
    if [ "$(which host)" ]; then
        ip="$(host "$name" | awk '/has address/ { print $4 ; exit }' ||:)"
        ( environ.validateIpAddress "$ip" ) && return 0
    fi

    if [ "$(which nslookup)" ]; then
        ip=$(nslookup "$name" | awk '/^Address: / { print $2 ; exit }' ||:)
        ( environ.validateIpAddress "$ip" ) && return 0
    fi

    if [ "$(which dig)" ]; then
        ip="$(dig +short "$name" | awk '{ print ; exit }' ||:)"
        ( environ.validateIpAddress "$ip" ) && return 0
        ip="$(dig "$name" | awk '/^;; ANSWER SECTION:$/ { getline ; print $5 ; exit }' ||:)"
        ( environ.validateIpAddress "$ip" ) && return 0
    fi

    if [ "$(which getent)" ]; then
        ip="$(getent hosts "$name" | awk '{ print $1 ; exit }' ||:)"
        ( environ.validateIpAddress "$ip" ) && return 0
    fi
}
export -f environ.getHostIp

#----------------------------------------------------------------------------------------------
function environ.getHostName()
{
    local -r ip=${1:-}

    local name
    if [ -z "${ip:-}" ]; then
        environ.fqdName
    fi

    if [ "$(which getent)" ]; then
        name=$(getent host "$ip" | awk '{ print $2 ; exit }' ||:)
        [[ "${name:-}" ]] && echo "$name" && return 0
    fi

    if [ "$(which host)" ]; then
        name=$(host "$ip" | awk '/domain name pointer/ { print substr($5,1,length($5)-1) ; exit }' ||:)
        [[ "${name:-}" ]] && echo "$name" && return 0
    fi

    if [ "$(which nslookup)" ]; then
        name=$(nslookup "$ip" | awk '/name = / {print substr($4,1,length($4)-1) ; exit}' ||:)
        [[ "${name:-}" ]] && echo "$name" && return 0
    fi
}
export -f environ.getHostName

#----------------------------------------------------------------------------------------------
function environ.hardwareName()
{
    uname -m
}
export -f environ.hardwareName

#----------------------------------------------------------------------------------------------
function environ.hardwarePlatform()
{
    uname -i
}
export -f environ.hardwarePlatform

#----------------------------------------------------------------------------------------------
function environ.hostIp()
{
    environ.ipAddress
}
export -f environ.hostIp

#----------------------------------------------------------------------------------------------
function environ.hostName()
{
    hostname -s
}
export -f environ.hostName

#----------------------------------------------------------------------------------------------
function environ.ipAddressAndMask()
{
    local -r iface=${1:-eth0}
    ip -4 -o addr | grep "$iface" | awk '{print $4}'
}
export -f environ.ipAddressAndMask

#----------------------------------------------------------------------------------------------
function environ.ipAddress()
{
    local ip
    if [ "$(which nslookup)" ]; then
        ip=$(nslookup $(hostname -f) | awk '/^Address: / { print $2 ; exit }' ||:)
        ( environ.validateIpAddress "$ip" ) && return 0
        ip=$(nslookup $(< /etc/hostname) | awk '/^Address: / { print $2 ; exit }' ||:)
        ( environ.validateIpAddress "$ip" ) && return 0
    fi
    if [ "$(which ip)" ]; then
        ip=$(ip -4 -o addr | grep $(ip -4 addr| grep 'state UP' | grep -vE 'qdisc (noqueue|nq)' | awk '{sub(":", "", $2);print $2}') | awk '{sub("/.*$","",$4);print $4}' ||:)
        ( environ.validateIpAddress "$ip" ) && return 0
    fi
    if [ "$(which hostname)" ]; then
        ip=$(hostname -i ||:)
        ( environ.validateIpAddress "$ip" ) && return 0
    fi
}
export -f environ.ipAddress

#----------------------------------------------------------------------------------------------
function environ.kernelName()
{
    uname -s
}
export -f environ.kernelName

#----------------------------------------------------------------------------------------------
function environ.kernelRelease()
{
    uname -r
}
export -f environ.kernelRelease

#----------------------------------------------------------------------------------------------
function environ.kernelVersion()
{
    uname -v
}
export -f environ.kernelVersion

#----------------------------------------------------------------------------------------------
function environ.memorySize()
{
    local -r allocated_memory="$(grep MemTotal /proc/meminfo | awk '{print $2}')"
    echo "$(( allocated_memory*1024 ))"
}
export -f environ.memorySize

#----------------------------------------------------------------------------------------------
function environ.nodeName()
{
    uname -n
}
export -f environ.nodeName

#----------------------------------------------------------------------------------------------
function environ.numCPUs()
{
    nproc --all # or grep -c (processor /proc/cpuinfo)
}
export -f environ.numCPUs

#----------------------------------------------------------------------------------------------
function environ.operatingSystem()
{
    uname -o
}
export -f environ.operatingSystem

#----------------------------------------------------------------------------------------------
function environ.OSid()
{
    if [ -e /etc/os-release ]; then
        grep -e '^ID=' /etc/os-release | awk -F'=' '{ print $2 }' | tr -d '"'
    else
        echo 'unknown'
    fi
}
export -f environ.OSid

#----------------------------------------------------------------------------------------------
function environ.processorType()
{
    uname -p
}
export -f environ.processorType

#----------------------------------------------------------------------------------------------
function environ.shortName()
{
    hostname -s
}
export -f environ.shortName

#----------------------------------------------------------------------------------------------
function environ.systemDateTime()
{
    date +"%F %T%:::z"
}
export -f environ.systemDateTime

#----------------------------------------------------------------------------------------------
function environ.validateIpAddress()
{
    local -r ip="${1:-}"

    [ -z "${ip}" ] && return 1
    echo "$ip" | grep -E '^([1-2]?[0-9]{0,2}\.){3,3}[1-2]?[0-9]{0,2}$'
}
export -f environ.validateIpAddress

#----------------------------------------------------------------------------------------------
