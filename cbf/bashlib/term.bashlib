#!/bin/bash

#----------------------------------------------------------------------------------------------
#
#   term.bashlib
#

#----------------------------------------------------------------------------------------------
function term.__init()
{
    export LOG=term.log
    export TERM_DIR="$(readlink -f "$( dirname "${BASH_SOURCE[0]}" )/properties")"

    export CBF_LOG_FILE
    if [ -w /var/log ]; then
        CBF_LOG_FILE=/var/log/cbf.log
    elif [ -w /tmp ]; then
        CBF_LOG_FILE=/tmp/cbf.log
    else
        CBF_LOG_FILE=/dev/null
    fi
    readonly CBF_LOG_FILE
}

#----------------------------------------------------------------------------------------------
function term.codes_ATTR_RESET()
{
    local -r name=${1:?"Input parameter 'name' must be passed to 'function ${FUNCNAME[0]}()'"}

    declare -Ax ATTR_RESET=( ['bold']=21 ['dim']=22 ['underline']=24 ['blink']=25 ['invert']=27 ['hidden']=28 ['all']=0 )
    echo "${ATTR_RESET[$name]:-}"
}
export -f term.codes_ATTR_RESET

#----------------------------------------------------------------------------------------------
function term.codes_ATTR_SETTERS()
{
    local -r name=${1:?"Input parameter 'name' must be passed to 'function ${FUNCNAME[0]}()'"}

    declare -Ax ATTR_SETTERS=( ['bold']=1 ['dim']=2 ['underline']=4 ['blink']=5 ['invert']=7 ['hidden']=8 )
    echo "${ATTR_SETTERS[$name]:-}"
}
export -f term.codes_ATTR_SETTERS

#----------------------------------------------------------------------------------------------
function term.codes_BACKGROUND()
{
    local -r name=${1:?"Input parameter 'name' must be passed to 'function ${FUNCNAME[0]}()'"}

    declare -Ax BACKGROUND=( ['default']=49 ['black']=40 ['red']=41 ['green']=42 ['yellow']=43 ['blue']=44 ['magenta']=45 ['cyan']=46 ['gray']=47 ['grey']=47 ['lt_gray']=47 ['lt_grey']=47 ['dk_gray']=100 ['dk_grey']=100 ['lt_red']=101 ['lt_green']=102 ['lt_yellow']=103 ['lt_blue']=104 ['lt_magenta']=105 ['lt_cyan']=106 ['white']=107 )
    echo "${BACKGROUND[$name]:-}"
}
export -f term.codes_BACKGROUND

#----------------------------------------------------------------------------------------------
function term.codes_FOREGROUND()
{
    local -r name=${1:?"Input parameter 'name' must be passed to 'function ${FUNCNAME[0]}()'"}

    declare -Ax FOREGROUND=( ['black']=30 ['blue']=34 ['cyan']=36 ['default']=39 ['dk_gray']=90 ['dk_grey']=90 ['gray']=90 ['grey']=90 ['green']=32 ['lt_blue']=94 ['lt_cyan']=96 ['lt_gray']=37 ['lt_grey']=37 ['lt_green']=92 ['lt_magenta']=95 ['lt_red']=91 ['lt_yellow']=93 ['magenta']=35 ['red']=31 ['white']=97 ['yellow']=33 )
    echo "${FOREGROUND[$name]:-}"
}
export -f term.codes_FOREGROUND

#----------------------------------------------------------------------------------------------
function term.codes()
{
    local -r mode=${1:?"Input parameter 'mode' must be passed to 'function ${FUNCNAME[0]}()'"}
    local -r name=${2:?"Input parameter 'code' must be passed to 'function ${FUNCNAME[0]}()'"}


    local -i code="$("term.codes_$mode" "$name")"
    [ "${code:--1}" -lt 0 ] || printf '\x1b[%dm' "$code"
}
export -f term.codes

#----------------------------------------------------------------------------------------------
function term.decode()
{
#    [ -t 1 ] || return 0
    local -r fg=${1:?"Input parameter 'fg' must be passed to 'function ${FUNCNAME[0]}()'"}
    local -r bg=${2:-}

    if [ -z "${bg:-}" ]; then
        case "$fg" in
             task)     term.codes 'FOREGROUND' 'lt_cyan';;
             info)     term.codes 'FOREGROUND' 'lt_green';;
     warn|warning)     term.codes 'FOREGROUND' 'lt_yellow';;
            error)     term.codes 'FOREGROUND' 'red';;
            reset)     term.codes 'ATTR_RESET' 'all';;
                *)     term.codes 'FOREGROUND' ${fg};;
        esac
    else
        local -r bg_code=$(term.codes 'BACKGROUND' "$bg")
        local -r fg_code=$(term.codes 'FOREGROUND' "$fg")
        [ -z "${bg_code:-}" ] || [ -z "${fg_code:-}" ] || printf '\x1b[%d;%dm' "$fg_code" "$bg_code"
    fi
}
export -f term.decode

#----------------------------------------------------------------------------------------------
function term.dlog()
{
    local -r msg=${1:?}
    local msg_type=${2:-}
    if [ "${DEBUG:-}" ] || [ "${DEBUG_TRACE:-0}" -gt 0 ];then
        term.log "$msg" "$msg_type" >&2
    fi
    term.log "$msg" "$msg_type" >> "$CBF_LOG_FILE"
}
export -f term.dlog

#----------------------------------------------------------------------------------------------
function term.elog()
{
    term.log "$@" >&2
}
export -f term.elog

#----------------------------------------------------------------------------------------------
function term.header()
{
    local -r name=${1:?"Input parameter 'name' must be passed to 'function ${FUNCNAME[0]}()'"}
    local -r bars='+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++'

    term.log "\n${bars}\n" 'blue'
    term.log "Building Container: $( term.decode 'white' )${name}\n" 'lt_blue'
    term.log "${bars}\n" 'blue'
}
export -f term.header

#----------------------------------------------------------------------------------------------
function term.log()
{
    local -r msg=${1:?"Input parameter 'msg' must be passed to 'function ${FUNCNAME[0]}()'"}
    local msg_type=${2:-}

#    [ -t 1 ] || unset msg_type
    if [ "${msg_type:-}" ]; then
        msg_type="$( term.decode $msg_type )"
        [ -z "$msg_type" ] || echo -en "$msg_type"
    fi
    echo -en "$msg"
    [ -z "${msg_type:-}" ] || echo -en $( term.decode 'reset' )
}
export -f term.log


[[ "${LOG:-}" = 'term.log' ]] || term.__init
