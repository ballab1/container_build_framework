#!/bin/bash

############################################################################# 
function libNotLoaded()
{
    local -r filename=${1:?"Input parameter 'filename' must be passed to 'function ${FUNCNAME[0]}()'"}
    local -r libname="$( basename "$filename" )"

    local -i status
    (grep -sq "$libname" "$libTracker" > /dev/null 2>&1 ) && status=$? || status=$?
    [ "$status" -ne 0 ] || return 1
    echo "$libname" >> "$libTracker"
    return 0
}

############################################################################# 
function loadLibs()
{
    local -a path=${1:?"Input parameter 'path' must be passed to 'function ${FUNCNAME[0]}()'"}

    [ "$path" ] || return 0
    [ -d "${path}" ] || return 0
    local -ar files=( $(find "$path" -maxdepth 1 -mindepth 1 -name '*.bashlib') )
    [ ${#files[@]} -gt 0 ] || return 0
    
    local src
    for src in "${files[@]}" ; do
        if  libNotLoaded "$src" ; then
            echo "    loading library: ${src}"
            source "$src"
        fi
    done
}

############################################################################# 

: ${CBF_LOCATION:="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd -P )"} 
: ${CRF_LOCATION:=/usr/local/crf}
: ${DEBUG_TRACE:=0}

# init our cache files
[ "${libTracker:-}" ] || declare -rx libTracker="${CBF_LOCATION}/bashlibs.loaded"
:> "$libTracker"

# load our bashlibs
loadLibs "${CBF_LOCATION}/crf/bashlib"
loadLibs "${CBF_LOCATION}${CRF_LOCATION}/bashlib"
loadLibs "${CRF_LOCATION}/bashlib"
loadLibs "${CBF_LOCATION}/cbf"

# init the framework
[ ! -e "${CBF_LOCATION}/crf/bin/init.runtime" ] || source "${CBF_LOCATION}/crf/bin/init.runtime"
cbf.__init "${CBF_LOCATION}" "${CRF_LOCATION}"

# verify init was successful
[ "$( cbf.CBFBASE )" ] || trap.die 'error when setting up container build framework'
[ "$( cbf.CRT_BASE )" ] || trap.die 'error when setting up container build framework'
