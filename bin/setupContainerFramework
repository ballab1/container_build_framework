#!/bin/bash

#set -o verbose
set -o nounset
set -o errexit

function createStructure()
{
    local tools=${1:?"must pass parameter 'tools' to 'function ${FUNCNAME[0]}()'"}

    local dirs=( $( lib.getFiles "${tools}/container_lib" ) )
    for lib in ${dirs[@]}; do
        [ ! -d "$lib" ] && continue
        local dir="$( basename "$lib" )"
        [ "$dir" = 'bin' ] && continue
        [ "$dir" = 'docs' ] && continue
        [ "$dir" = 'lib' ] && continue
        [ "$dir" = 'test' ] && continue

        mkdir -p "${tools}/container/${dir}"
        while read -r fl ;do
            local file="$( basename "$fl" )"
            [ -h "$file" ] && rm "$file"
            [ -e "$file" ] && rm "$file"
            echo "Creating symlink to ../../container_lib/${dir}/${file}"
            ln -s "../../container_lib/${dir}/${file}" .
        done < <(find "$lib" -maxdepth 1 -type f)
    done
}


function scanLibFolders()
{
    local tools=${1:?"must pass parameter 'tools' to 'function ${FUNCNAME[0]}()'"}

    mkdir -p "${tools}/container"

    cd "${tools}/container"
    [ -h bin ] && rm -rf bin
    [ -d bin ] && rm -rf bin

    # scan lib folders and create symlinks for any files found
    createStructure


    cd "${tools}/container/bin"
    echo "Creating symlink to ../../container_lib/bin"
    ln -s ../../container_lib/bin .
    echo "Creating symlink to ../../container_lib/bin/build"
    ln -s ../../container_lib/bin/build .
}


declare TOOLS="$( cd "$( dirname "${BASH_SOURCE[0]}" )/.." && pwd )" 
source "${TOOLS}/container_lib/lib.bashlib"

mkdir -p "${TOOLS}/container"
scanLibFolders "$TOOLS"
