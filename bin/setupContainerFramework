#!/bin/bash

#set -o verbose
set -o nounset
set -o errexit

function createStructure()
{
    local action_folders=${1:?"must pass parameter 'action_folders' to 'function ${FUNCNAME[0]}()'"}
    local framework=${2:?"must pass parameter 'framework' to 'function ${FUNCNAME[0]}()'"}

    local dirs=( $( lib.getFiles "${tools}/${framework}" ) )
    for lib in ${dirs[@]}; do
        [ ! -d "$lib" ] && continue

        local dir="$( basename "$lib" )"
        [ "$dir" = 'bin' ] && continue
        [ "$dir" = 'docs' ] && continue
        [ "$dir" = 'lib' ] && continue
        [ "$dir" = 'test' ] && continue

        mkdir -p "${action_folders}/${dir}"
        while read -r fl ;do
            local file="$( basename "$fl" )"
            [ -h "$file" ] && rm "$file"
            [ -e "$file" ] && rm "$file"
            echo "Creating symlink to ../../${framework}/${dir}/${file}"
            ln -s "../../${framework}/${dir}/${file}" .
        done < <(find "$lib" -maxdepth 1 -type f)
    done
}


function main()
{
    local build_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )/../.." && pwd )" 
    local framework="$( basename "$( cd "$( dirname "${BASH_SOURCE[0]}" )/.." && pwd )" )"
    
    # pull in framework libraries
    for src in "${build_dir}/${framework}/lib"/*.bashlib ; do
        source "$src"
    done

    # create project specific folder as sibling of 'framework'
    local -r actionFolders="${build_dir}/${ACTION_FOLDERS}"
    mkdir -p "$actionFolders"
    cd "$actionFolders"

    # scan lib folders and create symlinks for any files found
    createStructure "$actionFolders" "$framework"

    # create symlink for build script
    cd "$tools"
    ln -s "${framework}/bin/build" .
}


main