#!/bin/bash

#set -o verbose
set -o nounset
set -o errexit

function createStructure()
{
    local container=${1:?"must pass parameter 'container' to 'function ${FUNCNAME[0]}()'"}
    local lib_dir=${2:?"must pass parameter 'lib_dir' to 'function ${FUNCNAME[0]}()'"}

    local dirs=( $( lib.getFiles "${tools}/${lib_dir}" ) )
    for lib in ${dirs[@]}; do
        [ ! -d "$lib" ] && continue

        local dir="$( basename "$lib" )"
        [ "$dir" = 'bin' ] && continue
        [ "$dir" = 'docs' ] && continue
        [ "$dir" = 'lib' ] && continue
        [ "$dir" = 'test' ] && continue

        mkdir -p "${container}/${dir}"
        while read -r fl ;do
            local file="$( basename "$fl" )"
            [ -h "$file" ] && rm "$file"
            [ -e "$file" ] && rm "$file"
            echo "Creating symlink to ../../${lib_dir}/${dir}/${file}"
            ln -s "../../${lib_dir}/${dir}/${file}" .
        done < <(find "$lib" -maxdepth 1 -type f)
    done
}


function main()
{
    local build="$( cd "$( dirname "${BASH_SOURCE[0]}" )/../.." && pwd )" 
    local lib_dir="$( basename "$( cd "$( dirname "${BASH_SOURCE[0]}" )/.." && pwd )" )"
    
    # pull in framework libraries
    for src in "${build}/${lib_dir}/lib"/*.bashlib ; do
        source "$src"
    done

    # create project specific folder as sibling of 'lib_dir'
    local -r container="${build}/container"
    mkdir -p "$container"
    cd "$container"

    # scan lib folders and create symlinks for any files found
    createStructure "$container" "$lib_dir"

    # create symlink for build
    cd "$tools"
    ln -s "${lib_dir}/bin/build" .
}


main