#!/bin/bash
#############################################################################
#
#   test.sh
#
#############################################################################

set -o errexit
set -o nounset

declare -A test=()

#############################################################################
function test.installBatsModules()
{
    local -r test_dir=${1:?"must pass parameter 'test_dir' to 'function ${FUNCNAME[0]}()'"} 
    
    if [ ${#test[*]} -eq 0 ]; then
        # configure where our test framework comes from, adn in which dir it resides
        test['BATS_MODULES_REPO']="https://github.com/ballab1/bats-modules.git"
        test['BATS_DIR']="$( cd "$test_dir" && pwd )"
        test['BATS']="${test['BATS_DIR']}/bats/bin/bats"

        # download the test framework
        git clone --depth 1 --recurse -q "${test['BATS_MODULES_REPO']}" "${test['BATS_DIR']}" > /dev/null 2>&1

        # load the framework
        local -r dirs='bats-assert bats-support bats-file'
        for dir in $dirs ; do
            source "${test['BATS_DIR']}/${dir}/load.bash"
        done
    fi
}

#############################################################################
function test.main()
{
    local -r tests_to_run=${1:?"must pass parameter 'tests_to_run' to 'function ${FUNCNAME[0]}()'"} 

    local tmpUserDir=''
    if [ ${#test[*]} -eq 0 ]; then
        tmpUserDir="${TMPDIR:-/tmp}/$USER"
        mkdir -p "$tmpUserDir"
        local temporaryDir=$(mktemp -d --tmpdir="$tmpUserDir" --suffix=test bats_XXXXXXXXXXXXXXXXXX 2>/dev/null)
        mkdir -p "$temporaryDir"
        test.installBatsModules "$temporaryDir"
    fi
    "${test['BATS']}" -t "$( cd "$tests_to_run" && pwd )"
    [ ! "${#tmpUserDir}" -gt 0 ] || rm -rf "$tmpUserDir"
}

#############################################################################
#
# common
# ==================
# setup
# teardown
# batslib_is_caller
#
# common filesystem related assertions
# ====================================
# assert_file_exist
# assert_file_not_exist
# temp_make
# temp_del
#
# common assertions
# =================
# assert
# refute
# assert_equal
# assert_success
# assert_failure
# assert_output
# refute_output
# assert_line
# refute_line
#
# Error reporting
# ===============
# fail
#
#############################################################################


declare -r testdir="$( cd "$( dirname "${BASH_SOURCE[0]}" )/../tests" && pwd )"   
test.main "$testdir"
