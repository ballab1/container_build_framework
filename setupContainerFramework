#!/bin/bash

#set -o verbose
set -o nounset
set -o errexit

declare TOOLS="$( cd "$( dirname "${BASH_SOURCE[0]}" )/.." && pwd )" 

function createStructure()
{
    local -a dirs=( '02.packages' '03.users_groups' '04.downloads' '05.applications' '06.customizations' '07.permissions' '08.cleanup' )
    for dir in ${dirs[@]}; do
        mkdir -p "${TOOLS}/container/${dir}"
        touch "${TOOLS}/container/${dir}/.Do Not Delete"
    done
}

function createSymlinks()
{
    local dr=${1:?"must pass parameter 'dr' to ${FUNCNAME[0]}"}
    
    local dir="$( basename "$dr" )"
    [ $dir = '01.bashlib' ] && return 0

    cd "${TOOLS}/container/${dir}"
    while read -r fl ;do
        local file="$( basename "$fl" )"
        [ -h "$file" ] && rm "$file"
        [ -e "$file" ] && rm "$file"
        echo "Creating symlink to ../../container_lib/${dir}/${file}"
        ln -s "../../container_lib/${dir}/${file}" .
    done < <(find "$dr" -maxdepth 1 -type f ! -name '.*')
}

function scanLibFolders()
{
    cd "${TOOLS}/container"
    [ -h 01.bashlib ] && rm -rf 01.bashlib
    [ -d 01.bashlib ] && rm -rf 01.bashlib
    [ -h build.sh ] && rm build.sh
    [ -e build.sh ] && rm build.sh

    # scan lib folders and create symlinks for any files found
    while read -r dr ;do
        createSymlinks $dr        
    done < <(find "${TOOLS}/container_lib" -maxdepth 1 -type d -name '*.*' ! -path '.' ! -path './.*')

    cd "${TOOLS}/container"
    echo "Creating symlink to ../container_lib/01.bashlib"
    ln -s ../container_lib/01.bashlib .
    echo "Creating symlink to ../container_lib/build.sh"
    ln -s ../container_lib/build.sh .
}


if [ ! -d container ]; then
    createStructure
    scanLibFolders

elif [ -d container ] && [ -d container_lib ]; then
    scanLibFolders
fi
